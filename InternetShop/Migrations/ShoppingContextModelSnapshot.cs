// <auto-generated />
using System;
using InternetShop.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InternetShop.Presentation.Migrations
{
    [DbContext(typeof(ShoppingContext))]
    partial class ShoppingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("InternetShop.Data.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("UnitsCount")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("InternetShop.Data.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<double>("UnitInStock")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 817,
                            Name = "Shen Puer Tea «Lapis Dragon»",
                            Price = 223.0,
                            SupplierId = 1,
                            UnitInStock = 50.0
                        },
                        new
                        {
                            Id = 560,
                            Name = "Garnet Black Tea",
                            Price = 86.849999999999994,
                            SupplierId = 1,
                            UnitInStock = 150.0
                        },
                        new
                        {
                            Id = 127,
                            Name = "Eceri Green Georgian Tea",
                            Price = 93.0,
                            SupplierId = 2,
                            UnitInStock = 200.0
                        },
                        new
                        {
                            Id = 715,
                            Name = "NonMatch Tea",
                            Price = 375.0,
                            SupplierId = 2,
                            UnitInStock = 25.0
                        },
                        new
                        {
                            Id = 300,
                            Name = "English Breakfast Tea",
                            Price = 65.650000000000006,
                            SupplierId = 3,
                            UnitInStock = 1000.0
                        },
                        new
                        {
                            Id = 204,
                            Name = "Milk OLoong Tea",
                            Price = 111.84999999999999,
                            SupplierId = 4,
                            UnitInStock = 50.0
                        },
                        new
                        {
                            Id = 700,
                            Name = "Alpen Plains Tea",
                            Price = 86.849999999999994,
                            SupplierId = 5,
                            UnitInStock = 10.0
                        },
                        new
                        {
                            Id = 534,
                            Name = "Royal Berghamot Tea",
                            Price = 118.34999999999999,
                            SupplierId = 6,
                            UnitInStock = 5.0
                        },
                        new
                        {
                            Id = 206,
                            Name = "Sky blue Tegu Tea",
                            Price = 105.0,
                            SupplierId = 6,
                            UnitInStock = 110.0
                        },
                        new
                        {
                            Id = 502,
                            Name = "Masala Tea",
                            Price = 86.849999999999994,
                            SupplierId = 7,
                            UnitInStock = 50.0
                        });
                });

            modelBuilder.Entity("InternetShop.Data.Models.SuperMarket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SuperMarkets");
                });

            modelBuilder.Entity("InternetShop.Data.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyName = "Magical Tea",
                            FirstName = "Gregory",
                            LastName = "Mcmillan",
                            PhoneNumber = "0512223192"
                        },
                        new
                        {
                            Id = 2,
                            CompanyName = "Awesome Tea",
                            FirstName = "Alice",
                            LastName = "Scott",
                            PhoneNumber = "057376629"
                        },
                        new
                        {
                            Id = 3,
                            CompanyName = "Futuristic Tea",
                            FirstName = "Tony",
                            LastName = "Weiss",
                            PhoneNumber = "057456629"
                        },
                        new
                        {
                            Id = 4,
                            CompanyName = "Creatively Tea",
                            FirstName = "Joseph",
                            LastName = "Beard",
                            PhoneNumber = "057345233"
                        },
                        new
                        {
                            Id = 5,
                            CompanyName = "My Tea",
                            FirstName = "Edward",
                            LastName = "Ruiz",
                            PhoneNumber = "0971523684"
                        },
                        new
                        {
                            Id = 6,
                            CompanyName = "Holy Tea",
                            FirstName = "Cecilia",
                            LastName = "Conway",
                            PhoneNumber = "0935412687"
                        },
                        new
                        {
                            Id = 7,
                            CompanyName = "Tea Side",
                            FirstName = "Herbie",
                            LastName = "Haley",
                            PhoneNumber = "0964512756"
                        });
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.Property<int>("OrdersId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.HasKey("OrdersId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("OrderProduct");
                });

            modelBuilder.Entity("InternetShop.Data.Models.Product", b =>
                {
                    b.HasOne("InternetShop.Data.Models.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.HasOne("InternetShop.Data.Models.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternetShop.Data.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InternetShop.Data.Models.Supplier", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
